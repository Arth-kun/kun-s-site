{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]}],"exports":{"exported":["Task"],"specifiers":[{"kind":"local","local":"Task","exported":"default"}]}}},"options":{"filename":"/imports/ui/Task.js","filenameRelative":"/imports/ui/Task.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/Task.js.map","sourceFileName":"/imports/ui/Task.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Task"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var classnames;module.import('classnames',{\"default\":function(v){classnames=v}});\n\n\n\n\n\n\n// Task component - represents a single todo item\n\nvar Task = function (_Component) {\n    _inherits(Task, _Component);\n\n    function Task() {\n        _classCallCheck(this, Task);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    Task.prototype.toggleChecked = function () {\n        function toggleChecked() {\n\n            // Set the checked property to the opposite of its current value\n            Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n        }\n\n        return toggleChecked;\n    }();\n\n    Task.prototype.togglePrivate = function () {\n        function togglePrivate() {\n\n            Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task['private']);\n        }\n\n        return togglePrivate;\n    }();\n\n    Task.prototype.deleteThisTask = function () {\n        function deleteThisTask() {\n\n            Meteor.call('tasks.remove', this.props.task._id);\n        }\n\n        return deleteThisTask;\n    }();\n\n    Task.prototype.render = function () {\n        function render() {\n\n            // Give tasks a different className when they are checked off,\n            // so that we can style them nicely in CSS\n            var taskClassName = classnames({\n                checked: this.props.task.checked,\n                'private': this.props.task['private']\n            });\n\n            return React.createElement(\n                'li',\n                { className: taskClassName },\n                this.props.showDeleteButton ? React.createElement(\n                    'button',\n                    { className: 'delete', onClick: this.deleteThisTask.bind(this) },\n                    '\\xD7'\n                ) : '',\n                React.createElement('input', {\n\n                    type: 'checkbox',\n\n                    readOnly: true,\n\n                    checked: this.props.task.checked,\n\n                    onClick: this.toggleChecked.bind(this)\n\n                }),\n                this.props.showPrivateButton ? React.createElement(\n                    'button',\n                    { className: 'toggle-private', onClick: this.togglePrivate.bind(this) },\n                    this.props.task['private'] ? 'Private' : 'Public'\n                ) : '',\n                React.createElement(\n                    'span',\n                    { className: 'text' },\n                    React.createElement(\n                        'strong',\n                        null,\n                        this.props.task.username\n                    ),\n                    ': ',\n                    this.props.task.text\n                )\n            );\n        }\n\n        return render;\n    }();\n\n    return Task;\n}(Component);\n\nmodule.export(\"default\",exports.default=(Task));\n\n\nTask.propTypes = {\n\n    // This component gets the task to display through a React prop.\n    // We can use propTypes to indicate it is required\n    task: PropTypes.object.isRequired,\n    showPrivateButton: React.PropTypes.bool.isRequired,\n    showDeleteButton: React.PropTypes.bool.isRequired\n\n};","ast":null,"map":{"version":3,"sources":["/imports/ui/Task.js"],"names":["React","Component","PropTypes","Meteor","classnames","Task","toggleChecked","call","props","task","_id","checked","togglePrivate","deleteThisTask","render","taskClassName","showDeleteButton","bind","showPrivateButton","username","text","propTypes","object","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA;;IAEqBC,I;;;;;;;;;mBAEjBC,a;iCAAgB;;AAEZ;AACAH,mBAAOI,IAAP,CAAY,kBAAZ,EAAgC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhD,EAAqD,CAAC,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,OAAtE;AAEH;;;;;mBAEDC,a;iCAAgB;;AAEZT,mBAAOI,IAAP,CAAY,kBAAZ,EAAgC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhD,EAAqD,CAAC,KAAKF,KAAL,CAAWC,IAAX,WAAtD;AAEH;;;;;mBAEDI,c;kCAAiB;;AAEbV,mBAAOI,IAAP,CAAY,cAAZ,EAA4B,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAA5C;AAEH;;;;;mBAEDI,M;0BAAS;;AAEL;AACA;AACA,gBAAMC,gBAAgBX,WAAW;AAC7BO,yBAAS,KAAKH,KAAL,CAAWC,IAAX,CAAgBE,OADI;AAE7B,2BAAS,KAAKH,KAAL,CAAWC,IAAX;AAFoB,aAAX,CAAtB;;AAKA,mBACI;AAAA;AAAA,kBAAI,WAAWM,aAAf;AAEM,qBAAKP,KAAL,CAAWQ,gBAAX,GAEM;AAAA;AAAA,sBAAQ,WAAU,QAAlB,EAA2B,SAAS,KAAKH,cAAL,CAAoBI,IAApB,CAAyB,IAAzB,CAApC;AAAA;AAAA,iBAFN,GAQM,EAVZ;AAcI;;AAEI,0BAAK,UAFT;;AAII,kCAJJ;;AAMI,6BAAS,KAAKT,KAAL,CAAWC,IAAX,CAAgBE,OAN7B;;AAQI,6BAAS,KAAKL,aAAL,CAAmBW,IAAnB,CAAwB,IAAxB;;AARb,kBAdJ;AA0BM,qBAAKT,KAAL,CAAWU,iBAAX,GAEM;AAAA;AAAA,sBAAQ,WAAU,gBAAlB,EAAmC,SAAS,KAAKN,aAAL,CAAmBK,IAAnB,CAAwB,IAAxB,CAA5C;AACM,yBAAKT,KAAL,CAAWC,IAAX,cAA0B,SAA1B,GAAsC;AAD5C,iBAFN,GAMM,EAhCZ;AAkCI;AAAA;AAAA,sBAAM,WAAU,MAAhB;AACI;AAAA;AAAA;AAAS,6BAAKD,KAAL,CAAWC,IAAX,CAAgBU;AAAzB,qBADJ;AAAA;AACkD,yBAAKX,KAAL,CAAWC,IAAX,CAAgBW;AADlE;AAlCJ,aADJ;AA0CH;;;;;;EAxE6BnB,S;;eAAbI,I;;;AA8ErBA,KAAKgB,SAAL,GAAiB;;AAEb;AACA;AACAZ,UAAMP,UAAUoB,MAAV,CAAiBC,UAJV;AAKbL,uBAAmBlB,MAAME,SAAN,CAAgBsB,IAAhB,CAAqBD,UAL3B;AAMbP,sBAAkBhB,MAAME,SAAN,CAAgBsB,IAAhB,CAAqBD;;AAN1B,CAAjB","file":"/imports/ui/Task.js.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport classnames from 'classnames';\r\n\r\n// Task component - represents a single todo item\r\n\r\nexport default class Task extends Component {\r\n\r\n    toggleChecked() {\r\n\r\n        // Set the checked property to the opposite of its current value\r\n        Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\r\n\r\n    }\r\n\r\n    togglePrivate() {\r\n\r\n        Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\r\n\r\n    }\r\n\r\n    deleteThisTask() {\r\n\r\n        Meteor.call('tasks.remove', this.props.task._id);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        // Give tasks a different className when they are checked off,\r\n        // so that we can style them nicely in CSS\r\n        const taskClassName = classnames({\r\n            checked: this.props.task.checked,\r\n            private: this.props.task.private,\r\n        });\r\n\r\n        return (\r\n            <li className={taskClassName}>\r\n\r\n                { this.props.showDeleteButton ? (\r\n\r\n                        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\r\n\r\n                            &times;\r\n\r\n                        </button>\r\n\r\n                    ) : ''}\r\n\r\n\r\n\r\n                <input\r\n\r\n                    type=\"checkbox\"\r\n\r\n                    readOnly\r\n\r\n                    checked={this.props.task.checked}\r\n\r\n                    onClick={this.toggleChecked.bind(this)}\r\n\r\n                />\r\n\r\n                { this.props.showPrivateButton ? (\r\n\r\n                        <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\r\n                            { this.props.task.private ? 'Private' : 'Public' }\r\n                        </button>\r\n\r\n                    ) : ''}\r\n\r\n                <span className=\"text\">\r\n                    <strong>{this.props.task.username}</strong>: {this.props.task.text}\r\n                </span>\r\n\r\n            </li>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nTask.propTypes = {\r\n\r\n    // This component gets the task to display through a React prop.\r\n    // We can use propTypes to indicate it is required\r\n    task: PropTypes.object.isRequired,\r\n    showPrivateButton: React.PropTypes.bool.isRequired,\r\n    showDeleteButton: React.PropTypes.bool.isRequired\r\n\r\n};\r\n\r\n"]},"hash":"71d201d215c92dc1d427f191f98bff81de9f1679"}
