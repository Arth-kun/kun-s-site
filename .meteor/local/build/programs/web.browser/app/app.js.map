{"version":3,"sources":["meteor://ðŸ’»app/client/main.js","meteor://ðŸ’»app/imports/api/tasks.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/imports/ui/AccountsUIWrapper.js","meteor://ðŸ’»app/imports/ui/App.js","meteor://ðŸ’»app/imports/ui/Task.js"],"names":["React","Meteor","render","App","startup","document","getElementById","Mongo","check","Tasks","Collection","isServer","publish","taskPublication","find","$or","$ne","owner","userId","methods","text","String","Error","insert","createdAt","Date","username","users","findOne","taskId","task","remove","setChecked","Boolean","update","$set","checked","setToPrivate","Accounts","ui","config","passwordSignupFields","Component","ReactDOM","Template","Blaze","AccountsUIWrapper","componentDidMount","view","loginButtons","findDOMNode","refs","container","componentWillUnmount","PropTypes","createContainer","Task","props","state","hideCompleted","handleSubmit","event","preventDefault","textInput","value","trim","call","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","map","currentUserId","currentUser","_id","showPrivateButton","showDeleteButton","incompleteCount","bind","propTypes","array","isRequired","number","object","subscribe","sort","fetch","count","user","classnames","toggleChecked","togglePrivate","deleteThisTask","taskClassName","bool"],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react'\r\nimport { Meteor } from 'meteor/meteor'\r\nimport { render } from 'react-dom'\r\n\r\nimport '../imports/startup/accounts-config'\r\nimport App from '../imports/ui/App'\r\n\r\nMeteor.startup(() => {\r\n    render(<App />, document.getElementById('render-target'));\r\n});\r\n\r\n","import { Meteor } from 'meteor/meteor'\r\nimport { Mongo } from 'meteor/mongo'\r\nimport { check } from 'meteor/check'\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif (Meteor.isServer) {\r\n    // This code only runs on the server\r\n    // only publish tasks that are public or belong to the current user\r\n    Meteor.publish('tasks', function taskPublication() {\r\n        return Tasks.find({\r\n            $or: [\r\n                { private: { $ne: true } },\r\n                { owner: this.userId },\r\n            ],\r\n        });\r\n    });\r\n}\r\n\r\nMeteor.methods({\r\n    'tasks.insert'(text) {\r\n        check(text, String);\r\n\r\n        // Make sure the user is logged in before inserting a task\r\n        if (! this.userId) {\r\n            throw new Meteor.Error('not-authorized');\r\n        }\r\n\r\n        Tasks.insert({\r\n            text,\r\n            createdAt: new Date(),\r\n            owner: this.userId,\r\n            username: Meteor.users.findOne(this.userId).username,\r\n        });\r\n    },\r\n\r\n    'tasks.remove'(taskId) {\r\n        check(taskId, String);\r\n\r\n        const task = Tasks.findOne(taskId);\r\n        if (task.owner !== this.userId) {\r\n            // make sure only the owner can delete it\r\n            throw new Meteor.Error('not-authorized');\r\n        }\r\n\r\n        Tasks.remove(taskId);\r\n    },\r\n\r\n    'tasks.setChecked'(taskId, setChecked) {\r\n        check(taskId, String);\r\n        check(setChecked, Boolean);\r\n\r\n        const task = Tasks.findOne(taskId);\r\n\r\n        if (task.private && task.owner !== this.userId) {\r\n            // if the task is private, make sure only the owner can delete it\r\n            throw new Meteor.Error('not-authorized');\r\n        }\r\n\r\n        Tasks.update(taskId, { $set: { checked: setChecked } });\r\n    },\r\n\r\n    'tasks.setPrivate'(taskId, setToPrivate) {\r\n        check(taskId, String);\r\n        check(setToPrivate, Boolean);\r\n\r\n        const task = Tasks.findOne(taskId);\r\n\r\n        //Make sure only the task owner can make a task private\r\n        if (task.owner !== this.userId) {\r\n            throw new Meteor.Error('not-authorized');\r\n        }\r\n\r\n        Tasks.update(taskId, { $set: { private: setToPrivate } });\r\n    },\r\n});","import { Accounts } from 'meteor/accounts-base';\r\n\r\nAccounts.ui.config({\r\n    passwordSignupFields: 'USERNAME_ONLY',\r\n});","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Template } from 'meteor/templating'\r\nimport { Blaze } from 'meteor/blaze'\r\n\r\nexport default class AccountsUIWrapper extends Component {\r\n    componentDidMount() {\r\n        // use Meteor Blaze to render login buttons\r\n        this.view = Blaze.render(Template.loginButtons,\r\n        ReactDOM.findDOMNode(this.refs.container));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // clean up Blaze view\r\n        Blaze.remove(this.view);\r\n    }\r\n\r\n    render() {\r\n        // just render a placeholder container that will be filled in\r\n        return <span ref=\"container\" />;\r\n    }\r\n}","import React, { Component, PropTypes } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Meteor } from 'meteor/meteor'\r\nimport { createContainer } from 'meteor/react-meteor-data'\r\n\r\nimport { Tasks } from '../api/tasks'\r\nimport Task from './Task'\r\nimport AccountsUIWrapper from './AccountsUIWrapper'\r\n\r\n// App component - represents the whole app\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hideCompleted: false,\r\n        };\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        //Find the text field via the React ref\r\n        const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\r\n\r\n        Meteor.call('tasks.insert', text);\r\n\r\n        // clear form\r\n        ReactDOM.findDOMNode(this.refs.textInput).value = '';\r\n    }\r\n\r\n    toggleHideCompleted() {\r\n        this.setState({\r\n            hideCompleted: !this.state.hideCompleted,\r\n        });\r\n    }\r\n\r\n    renderTasks() {\r\n        let filteredTasks = this.props.tasks;\r\n\r\n        if(this.state.hideCompleted)\r\n            filteredTasks = filteredTasks.filter(task => !task.checked);\r\n\r\n        return filteredTasks.map((task) => {\r\n            const currentUserId = this.props.currentUser && this.props.currentUser._id;\r\n            const showPrivateButton = task.owner === currentUserId;\r\n            const showDeleteButton = !!this.props.currentUser;\r\n\r\n            return (\r\n                <Task\r\n                    key={task._id}\r\n                    task={task}\r\n                    showPrivateButton={showPrivateButton}\r\n                    showDeleteButton={showDeleteButton}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <header>\r\n                    <h1>Denoux List ({this.props.incompleteCount})</h1>\r\n                    <label className=\"hide-completed\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            readOnly\r\n                            checked={this.state.hideCompleted}\r\n                            onClick={this.toggleHideCompleted.bind(this)}\r\n                        />\r\n                        Hide Completed Tasks\r\n                    </label>\r\n                    <AccountsUIWrapper/>\r\n\r\n                    { this.props.currentUser ?\r\n                        <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)}>\r\n                            <input\r\n                                type=\"text\"\r\n                                ref=\"textInput\"\r\n                                placeholder=\"Type to add new tasks for Denoux\"\r\n                            />\r\n                        </form> : ''\r\n                    }\r\n                    \r\n                </header>\r\n                <ul>\r\n                    {this.renderTasks()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    tasks: PropTypes.array.isRequired,\r\n    incompleteCount: PropTypes.number.isRequired,\r\n    currentUser: PropTypes.object,\r\n};\r\n\r\nexport default createContainer(() => {\r\n    Meteor.subscribe('tasks');\r\n\r\n    return {\r\n        tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n        incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\r\n        currentUser: Meteor.user(),\r\n    };\r\n}, App);","import React, { Component, PropTypes } from 'react'\r\nimport { Meteor } from 'meteor/meteor'\r\nimport classnames from 'classnames'\r\n\r\n// Task component - represents a single todo item\r\n\r\nexport default class Task extends Component {\r\n    toggleChecked() {\r\n        // Set the checked property to the opposite of its current value\r\n        Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\r\n    }\r\n\r\n    togglePrivate() {\r\n        Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\r\n    }\r\n\r\n    deleteThisTask() {\r\n        Meteor.call('tasks.remove', this.props.task._id);\r\n    }\r\n\r\n    render() {\r\n        // Give tasks a different className when they are checked off,\r\n        // so that we can style them nicely in CSS\r\n        const taskClassName = classnames({\r\n            checked: this.props.task.checked,\r\n            private: this.props.task.private,\r\n        });\r\n\r\n        return (\r\n            <li className={taskClassName}>\r\n\r\n                { this.props.showDeleteButton ? (\r\n                        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\r\n                            &times;\r\n                        </button>\r\n                    ) : ''}\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    readOnly\r\n                    checked={this.props.task.checked}\r\n                    onClick={this.toggleChecked.bind(this)}\r\n                />\r\n\r\n                { this.props.showPrivateButton ? (\r\n                        <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\r\n                            { this.props.task.private ? 'Private' : 'Public' }\r\n                        </button>\r\n                    ) : ''}\r\n\r\n                <span className=\"text\">\r\n                    <strong>{this.props.task.username}</strong>: {this.props.task.text}\r\n                </span>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nTask.propTypes = {\r\n    // This component gets the task to display through a React prop.\r\n    // We can use propTypes to indicate it is required\r\n    task: PropTypes.object.isRequired,\r\n    showPrivateButton: React.PropTypes.bool.isRequired,\r\n    showDeleteButton: React.PropTypes.bool.isRequired\r\n};"]}